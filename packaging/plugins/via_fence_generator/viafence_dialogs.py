#!/usr/bin/env python

import os
import sys
from .viafence_basedialogs import *
import configparser

class MainDialog(MainDialogBase):
    def __init__(self, parent):
        MainDialogBase.__init__(self, parent)
        # Small workaround to fix the paths generated by wxFormBuilder
        self.bmpViafence.SetBitmap(wx.Bitmap( os.path.join(os.path.dirname(os.path.realpath(__file__)), "resources", "viafence.png") ) )

    def OnInitDialog(self, event):
        self.Layout()
        self.GetSizer().Fit(self)
        self.SetMinSize(self.GetSize())
        #self.SetMaxSize(self.GetSize())
        self.SetTitle(u"Via Fence Generator")
        if sys.version_info[0] == 2:
            self.chkDebugDump.SetToolTipString( u"Creates a json file in the same directory as the opened board file containing the tracks and settings" )
        else:
            self.chkDebugDump.SetToolTip( u"Creates a json file in the same directory as the opened board file containing the tracks and settings" )
        self.local_config_file = os.path.join(os.path.dirname(__file__), 'vf_config.ini')
        config = configparser.ConfigParser()
        config.read(self.local_config_file)
        self.txtViaOffset.SetValue(config.get('params','offset'))
        self.txtViaPitch.SetValue(config.get('params','pitch'))
        self.txtViaDrill.SetValue(config.get('params','via_drill'))
        self.txtViaSize.SetValue(config.get('params','via_size'))
        self.chkIncludeSelection.SetValue(config['options'].getboolean('include_selected'))
        self.chkRemoveViasWithClearanceViolation.SetValue(config['options'].getboolean('remove_violations'))
        self.chkIncludeDrawing.SetValue(config['options'].getboolean('include_drawings'))
        # self.width = int(config.get('win_size','width'))
        # self.height = int(config.get('win_size','height'))
        # self.m_clearanceMM.SetValue(config.get('params','clearance'))
        # self.SetSize(self.width,self.height)
        #self.GetSizer().Fit(self)
        #self.SetMinSize(self.GetSize())
        
    def OnNetFilterCheckBox(self, event):
        self.txtNetFilter.Enable(event.IsChecked())

    def OnLayerCheckBox(self, event):
        self.lstLayer.Enable(event.IsChecked())

